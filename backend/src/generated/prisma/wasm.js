
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AirportScalarFieldEnum = {
  AirportID: 'AirportID',
  AirportName: 'AirportName',
  City: 'City',
  Country: 'Country'
};

exports.Prisma.AirlineScalarFieldEnum = {
  AirlineName: 'AirlineName',
  AirlineCaption: 'AirlineCaption',
  Website: 'Website',
  AmountOfAircraft: 'AmountOfAircraft',
  Logo: 'Logo'
};

exports.Prisma.AircraftScalarFieldEnum = {
  AircraftRegNo: 'AircraftRegNo',
  AirlineName: 'AirlineName',
  SeatCapacity: 'SeatCapacity',
  ModelName: 'ModelName'
};

exports.Prisma.FlightScalarFieldEnum = {
  FlightNo: 'FlightNo',
  Schedule: 'Schedule',
  ArrivalAirportID: 'ArrivalAirportID',
  DepartureAirportID: 'DepartureAirportID',
  AirlineName: 'AirlineName',
  AircraftRegNo: 'AircraftRegNo'
};

exports.Prisma.TicketScalarFieldEnum = {
  TicketID: 'TicketID',
  Price: 'Price',
  TicketStatus: 'TicketStatus',
  PassengerName: 'PassengerName',
  PassengerLastName: 'PassengerLastName',
  Gender: 'Gender',
  DateOfBirth: 'DateOfBirth',
  Nationality: 'Nationality',
  BaggageChecked: 'BaggageChecked',
  BaggageCabin: 'BaggageCabin',
  SeatNo: 'SeatNo',
  AircraftRegNo: 'AircraftRegNo',
  FlightNo: 'FlightNo',
  Schedule: 'Schedule'
};

exports.Prisma.OperateScalarFieldEnum = {
  AirportID: 'AirportID',
  AirlineName: 'AirlineName'
};

exports.Prisma.Assigned_ToScalarFieldEnum = {
  FlightNo: 'FlightNo',
  Schedule: 'Schedule',
  UserAccountID: 'UserAccountID'
};

exports.Prisma.ContactScalarFieldEnum = {
  AdminAccountID: 'AdminAccountID',
  AirlineName: 'AirlineName',
  ContactStatus: 'ContactStatus'
};

exports.Prisma.Report_ToScalarFieldEnum = {
  UserAccountID: 'UserAccountID',
  AdminAccountID: 'AdminAccountID',
  ReportStatus: 'ReportStatus'
};

exports.Prisma.CabinClassScalarFieldEnum = {
  AircraftRegNo: 'AircraftRegNo',
  Class: 'Class',
  StandardPrice: 'StandardPrice'
};

exports.Prisma.SeatScalarFieldEnum = {
  AircraftRegNo: 'AircraftRegNo',
  SeatNo: 'SeatNo',
  SeatType: 'SeatType'
};

exports.Prisma.AdminScalarFieldEnum = {
  AdminAccountID: 'AdminAccountID',
  IPAddress: 'IPAddress'
};

exports.Prisma.Airline_MessageScalarFieldEnum = {
  AirlineName: 'AirlineName',
  AdminAccountID: 'AdminAccountID',
  MessageText: 'MessageText'
};

exports.Prisma.AccountScalarFieldEnum = {
  AccountID: 'AccountID',
  Password: 'Password',
  FirstName: 'FirstName',
  LastName: 'LastName'
};

exports.Prisma.UserScalarFieldEnum = {
  UserAccountID: 'UserAccountID',
  Email: 'Email'
};

exports.Prisma.User_Tel_NoScalarFieldEnum = {
  UserAccountID: 'UserAccountID',
  TelNo: 'TelNo'
};

exports.Prisma.ReportScalarFieldEnum = {
  ReportID: 'ReportID',
  ReportDescription: 'ReportDescription',
  BookingID: 'BookingID',
  Attachment: 'Attachment',
  UserAccountID: 'UserAccountID',
  AdminAccountID: 'AdminAccountID',
  Email: 'Email',
  TelNo: 'TelNo',
  PassengerName: 'PassengerName'
};

exports.Prisma.Domestic_TicketScalarFieldEnum = {
  TicketID: 'TicketID'
};

exports.Prisma.International_TicketScalarFieldEnum = {
  TicketID: 'TicketID',
  PassportNo: 'PassportNo',
  IssuedCountry: 'IssuedCountry',
  PassportExpiry: 'PassportExpiry'
};

exports.Prisma.Round_Trip_TicketScalarFieldEnum = {
  TicketID: 'TicketID',
  TicketID2: 'TicketID2'
};

exports.Prisma.PurchaseScalarFieldEnum = {
  TicketID: 'TicketID',
  PaymentID: 'PaymentID',
  UserAccountID: 'UserAccountID'
};

exports.Prisma.PaymentScalarFieldEnum = {
  PaymentID: 'PaymentID',
  PaymentDateTime: 'PaymentDateTime',
  PaymentMethod: 'PaymentMethod',
  TransactionStatus: 'TransactionStatus',
  Amount: 'Amount'
};

exports.Prisma.Airline_Tel_NoScalarFieldEnum = {
  TelNo: 'TelNo',
  AirlineName: 'AirlineName'
};

exports.Prisma.SessionScalarFieldEnum = {
  SessionID: 'SessionID',
  UserAccountID: 'UserAccountID',
  TokenHash: 'TokenHash',
  CreatedAt: 'CreatedAt',
  LastSeenAt: 'LastSeenAt',
  IdleExpiresAt: 'IdleExpiresAt',
  AbsoluteExpiresAt: 'AbsoluteExpiresAt',
  RevokedAt: 'RevokedAt',
  RevokeReason: 'RevokeReason'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Airport: 'Airport',
  Airline: 'Airline',
  Aircraft: 'Aircraft',
  Flight: 'Flight',
  Ticket: 'Ticket',
  Operate: 'Operate',
  Assigned_To: 'Assigned_To',
  Contact: 'Contact',
  Report_To: 'Report_To',
  CabinClass: 'CabinClass',
  Seat: 'Seat',
  Admin: 'Admin',
  Airline_Message: 'Airline_Message',
  Account: 'Account',
  User: 'User',
  User_Tel_No: 'User_Tel_No',
  Report: 'Report',
  Domestic_Ticket: 'Domestic_Ticket',
  International_Ticket: 'International_Ticket',
  Round_Trip_Ticket: 'Round_Trip_Ticket',
  Purchase: 'Purchase',
  Payment: 'Payment',
  Airline_Tel_No: 'Airline_Tel_No',
  Session: 'Session'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\chyut\\Chula\\Software_Engineer\\Se-Project\\backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "C:\\Users\\chyut\\Chula\\Software_Engineer\\Se-Project\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.15.0",
  "engineVersion": "85179d7826409ee107a6ba334b5e305ae3fba9fb",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n  output          = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Airport {\n  AirportID   String @id @db.VarChar(10)\n  AirportName String @db.VarChar(100)\n  City        String @db.VarChar(100)\n  Country     String @db.VarChar(100)\n\n  // Relations\n  operates         Operate[]\n  departureFlights Flight[]  @relation(\"DepartureFlights\")\n  arrivalFlights   Flight[]  @relation(\"ArrivalFlights\")\n}\n\nmodel Airline {\n  AirlineName      String  @id @db.VarChar(100)\n  AirlineCaption   String  @db.VarChar(255)\n  Website          String? @db.VarChar(255)\n  AmountOfAircraft Int\n  Logo             String? @db.VarChar(255)\n\n  // Relations\n  operates  Operate[]\n  aircrafts Aircraft[]\n  flights   Flight[]\n  telNos    Airline_Tel_No[]\n  messages  Airline_Message[]\n  contacts  Contact[]\n}\n\nmodel Aircraft {\n  AircraftRegNo String @id @db.VarChar(20)\n  AirlineName   String @db.VarChar(100)\n  SeatCapacity  Int\n  ModelName     String @db.VarChar(100)\n\n  // Relations\n  airline Airline      @relation(fields: [AirlineName], references: [AirlineName])\n  seats   Seat[]\n  flights Flight[]\n  cabins  CabinClass[]\n}\n\nmodel Flight {\n  FlightNo           String   @db.VarChar(10)\n  Schedule           DateTime\n  ArrivalAirportID   String   @db.VarChar(10)\n  DepartureAirportID String   @db.VarChar(10)\n  AirlineName        String   @db.VarChar(100)\n  AircraftRegNo      String   @db.VarChar(20)\n\n  // Relations\n  arrivalAirport   Airport       @relation(\"ArrivalFlights\", fields: [ArrivalAirportID], references: [AirportID])\n  departureAirport Airport       @relation(\"DepartureFlights\", fields: [DepartureAirportID], references: [AirportID])\n  airline          Airline       @relation(fields: [AirlineName], references: [AirlineName])\n  aircraft         Aircraft      @relation(fields: [AircraftRegNo], references: [AircraftRegNo])\n  passengers       Assigned_To[]\n  tickets          Ticket[]\n\n  @@id([FlightNo, Schedule])\n  @@unique([FlightNo])\n}\n\nmodel Ticket {\n  TicketID          String   @id @db.VarChar(50)\n  Price             Float\n  TicketStatus      String\n  PassengerName     String\n  PassengerLastName String\n  Gender            String\n  DateOfBirth       DateTime\n  Nationality       String\n  BaggageChecked    Float\n  BaggageCabin      Float\n  SeatNo            String\n  AircraftRegNo     String\n  FlightNo          String\n  Schedule          DateTime\n\n  // Relations\n  flight               Flight                @relation(fields: [FlightNo, Schedule], references: [FlightNo, Schedule])\n  seat                 Seat                  @relation(fields: [AircraftRegNo, SeatNo], references: [AircraftRegNo, SeatNo])\n  purchase             Purchase?\n  domesticTicket       Domestic_Ticket?\n  internationalTicket  International_Ticket?\n  roundTripTicketPart1 Round_Trip_Ticket?    @relation(\"RoundTrip1\")\n  roundTripTicketPart2 Round_Trip_Ticket?    @relation(\"RoundTrip2\")\n}\n\n// --- Join / Associative Tables ---\n\nmodel Operate {\n  AirportID   String @db.VarChar(10)\n  AirlineName String @db.VarChar(100)\n\n  // Relations\n  airport Airport @relation(fields: [AirportID], references: [AirportID])\n  airline Airline @relation(fields: [AirlineName], references: [AirlineName])\n\n  @@id([AirportID, AirlineName])\n}\n\nmodel Assigned_To {\n  FlightNo      String   @db.VarChar(10)\n  Schedule      DateTime\n  UserAccountID String   @db.VarChar(50)\n\n  // Relations\n  flight Flight @relation(fields: [FlightNo, Schedule], references: [FlightNo, Schedule])\n  user   User   @relation(fields: [UserAccountID], references: [UserAccountID])\n\n  @@id([FlightNo, Schedule, UserAccountID])\n}\n\nmodel Contact {\n  AdminAccountID String @db.VarChar(50)\n  AirlineName    String @db.VarChar(50)\n  ContactStatus  String\n\n  // Relations\n  admin   Admin   @relation(fields: [AdminAccountID], references: [AdminAccountID])\n  airline Airline @relation(fields: [AirlineName], references: [AirlineName])\n\n  @@id([AdminAccountID, AirlineName])\n}\n\nmodel Report_To {\n  UserAccountID  String @db.VarChar(50)\n  AdminAccountID String @db.VarChar(50)\n  ReportStatus   String\n\n  // Relations\n  //user   User   @relation(fields: [UserAccountID], references: [UserAccountID])\n  admin   Admin    @relation(fields: [AdminAccountID], references: [AdminAccountID])\n  user    User     @relation(fields: [UserAccountID], references: [UserAccountID])\n  Reports Report[] @relation(\"CreatedReports\")\n\n  @@id([UserAccountID, AdminAccountID])\n}\n\n// --- Other Models ---\n\nmodel CabinClass {\n  AircraftRegNo String   @db.VarChar(20)\n  Class         String   @db.VarChar(20)\n  StandardPrice Float\n  // Relations\n  aircraft      Aircraft @relation(fields: [AircraftRegNo], references: [AircraftRegNo])\n\n  @@id([AircraftRegNo, Class])\n}\n\nmodel Seat {\n  AircraftRegNo String @db.VarChar(20)\n  SeatNo        String @db.VarChar(10)\n  SeatType      String\n\n  // Relations\n  aircraft Aircraft @relation(fields: [AircraftRegNo], references: [AircraftRegNo])\n  tickets  Ticket[]\n\n  @@id([AircraftRegNo, SeatNo])\n}\n\nmodel Admin {\n  AdminAccountID      String            @id @db.VarChar(50)\n  IPAddress           String?\n  // Relations\n  account             Account           @relation(fields: [AdminAccountID], references: [AccountID])\n  sentAirlineMessages Airline_Message[]\n  contacts            Contact[]\n  involvedInReports   Report_To[]\n}\n\nmodel Airline_Message {\n  AirlineName    String @db.VarChar(100)\n  AdminAccountID String @db.VarChar(50)\n  MessageText    String\n\n  // Relations\n  admin   Admin   @relation(fields: [AdminAccountID], references: [AdminAccountID])\n  airline Airline @relation(fields: [AirlineName], references: [AirlineName])\n\n  @@id([AirlineName, AdminAccountID, MessageText])\n}\n\nmodel Account {\n  AccountID String @id @db.VarChar(50)\n  Password  String\n  FirstName String\n  LastName  String\n\n  // Relations for inheritance\n  user  User?\n  admin Admin?\n}\n\nmodel User {\n  UserAccountID String @id @db.VarChar(50)\n  Email         String @unique\n\n  // Relations\n  account           Account       @relation(fields: [UserAccountID], references: [AccountID])\n  telNos            User_Tel_No[]\n  assignedFlights   Assigned_To[]\n  purchases         Purchase[]\n  involvedInReports Report_To[]\n  sessions          Session[]\n}\n\nmodel User_Tel_No {\n  UserAccountID String @id @db.VarChar(50)\n  TelNo         String @db.VarChar(20)\n\n  // Relation\n  user User @relation(fields: [UserAccountID], references: [UserAccountID])\n}\n\nmodel Report {\n  ReportID          String  @id @db.VarChar(50)\n  ReportDescription String\n  BookingID         String\n  Attachment        String?\n  UserAccountID     String  @db.VarChar(50) // The user who created the report\n  AdminAccountID    String  @db.VarChar(50) // The admin handling the report\n  Email             String\n  TelNo             String\n  PassengerName     String\n\n  // Relations\n  creator Report_To @relation(\"CreatedReports\", fields: [UserAccountID, AdminAccountID], references: [UserAccountID, AdminAccountID])\n}\n\n// --- Ticket Specialization Models ---\n\nmodel Domestic_Ticket {\n  TicketID String @id @db.VarChar(50)\n\n  // Relation\n  ticket Ticket @relation(fields: [TicketID], references: [TicketID])\n}\n\nmodel International_Ticket {\n  TicketID       String   @id @db.VarChar(50)\n  PassportNo     String\n  IssuedCountry  String\n  PassportExpiry DateTime\n\n  // Relation\n  ticket Ticket @relation(fields: [TicketID], references: [TicketID])\n}\n\nmodel Round_Trip_Ticket {\n  TicketID  String @id @db.VarChar(50) // Represents the first ticket in the pair\n  TicketID2 String @unique @db.VarChar(50) // Represents the second ticket\n\n  // Relations\n  ticket1 Ticket @relation(\"RoundTrip1\", fields: [TicketID], references: [TicketID])\n  ticket2 Ticket @relation(\"RoundTrip2\", fields: [TicketID2], references: [TicketID])\n}\n\n// --- Transaction Models ---\n\nmodel Purchase {\n  TicketID      String @unique @db.VarChar(50)\n  PaymentID     String @unique @db.VarChar(50)\n  UserAccountID String @db.VarChar(50)\n\n  // Relations\n  ticket  Ticket  @relation(fields: [TicketID], references: [TicketID])\n  payment Payment @relation(fields: [PaymentID], references: [PaymentID])\n  user    User    @relation(fields: [UserAccountID], references: [UserAccountID])\n\n  @@id([TicketID, PaymentID])\n}\n\nmodel Payment {\n  PaymentID         String   @id @db.VarChar(50)\n  PaymentDateTime   DateTime\n  PaymentMethod     String\n  TransactionStatus String\n  Amount            Float\n\n  // Relation\n  purchase Purchase?\n}\n\nmodel Airline_Tel_No {\n  TelNo       String @db.VarChar(20)\n  AirlineName String @db.VarChar(100)\n\n  // Relation\n  airline Airline @relation(fields: [AirlineName], references: [AirlineName])\n\n  @@id([TelNo, AirlineName])\n}\n\n// Added from ERD, but not present in initial schema\nmodel Session {\n  SessionID         String    @id\n  UserAccountID     String    @db.VarChar(50)\n  TokenHash         String\n  CreatedAt         DateTime  @default(now())\n  LastSeenAt        DateTime\n  IdleExpiresAt     DateTime\n  AbsoluteExpiresAt DateTime\n  RevokedAt         DateTime?\n  RevokeReason      String?\n\n  // Relation\n  user User @relation(fields: [UserAccountID], references: [UserAccountID])\n}\n",
  "inlineSchemaHash": "11ea6a85cb7e66af1b6be33427719cd6251e87ad599527a97f3e3c2f9a007868",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Airport\":{\"fields\":[{\"name\":\"AirportID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AirportName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"City\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operates\",\"kind\":\"object\",\"type\":\"Operate\",\"relationName\":\"AirportToOperate\"},{\"name\":\"departureFlights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"DepartureFlights\"},{\"name\":\"arrivalFlights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"ArrivalFlights\"}],\"dbName\":null},\"Airline\":{\"fields\":[{\"name\":\"AirlineName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AirlineCaption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AmountOfAircraft\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"Logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operates\",\"kind\":\"object\",\"type\":\"Operate\",\"relationName\":\"AirlineToOperate\"},{\"name\":\"aircrafts\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToAirline\"},{\"name\":\"flights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"AirlineToFlight\"},{\"name\":\"telNos\",\"kind\":\"object\",\"type\":\"Airline_Tel_No\",\"relationName\":\"AirlineToAirline_Tel_No\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Airline_Message\",\"relationName\":\"AirlineToAirline_Message\"},{\"name\":\"contacts\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"AirlineToContact\"}],\"dbName\":null},\"Aircraft\":{\"fields\":[{\"name\":\"AircraftRegNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AirlineName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SeatCapacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ModelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AircraftToAirline\"},{\"name\":\"seats\",\"kind\":\"object\",\"type\":\"Seat\",\"relationName\":\"AircraftToSeat\"},{\"name\":\"flights\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"AircraftToFlight\"},{\"name\":\"cabins\",\"kind\":\"object\",\"type\":\"CabinClass\",\"relationName\":\"AircraftToCabinClass\"}],\"dbName\":null},\"Flight\":{\"fields\":[{\"name\":\"FlightNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Schedule\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ArrivalAirportID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DepartureAirportID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AirlineName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AircraftRegNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"arrivalAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"ArrivalFlights\"},{\"name\":\"departureAirport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"DepartureFlights\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AirlineToFlight\"},{\"name\":\"aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToFlight\"},{\"name\":\"passengers\",\"kind\":\"object\",\"type\":\"Assigned_To\",\"relationName\":\"Assigned_ToToFlight\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"FlightToTicket\"}],\"dbName\":null},\"Ticket\":{\"fields\":[{\"name\":\"TicketID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"TicketStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PassengerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PassengerLastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"DateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Nationality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"BaggageChecked\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"BaggageCabin\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"SeatNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AircraftRegNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FlightNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Schedule\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"flight\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"FlightToTicket\"},{\"name\":\"seat\",\"kind\":\"object\",\"type\":\"Seat\",\"relationName\":\"SeatToTicket\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"PurchaseToTicket\"},{\"name\":\"domesticTicket\",\"kind\":\"object\",\"type\":\"Domestic_Ticket\",\"relationName\":\"Domestic_TicketToTicket\"},{\"name\":\"internationalTicket\",\"kind\":\"object\",\"type\":\"International_Ticket\",\"relationName\":\"International_TicketToTicket\"},{\"name\":\"roundTripTicketPart1\",\"kind\":\"object\",\"type\":\"Round_Trip_Ticket\",\"relationName\":\"RoundTrip1\"},{\"name\":\"roundTripTicketPart2\",\"kind\":\"object\",\"type\":\"Round_Trip_Ticket\",\"relationName\":\"RoundTrip2\"}],\"dbName\":null},\"Operate\":{\"fields\":[{\"name\":\"AirportID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AirlineName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"airport\",\"kind\":\"object\",\"type\":\"Airport\",\"relationName\":\"AirportToOperate\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AirlineToOperate\"}],\"dbName\":null},\"Assigned_To\":{\"fields\":[{\"name\":\"FlightNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Schedule\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UserAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flight\",\"kind\":\"object\",\"type\":\"Flight\",\"relationName\":\"Assigned_ToToFlight\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Assigned_ToToUser\"}],\"dbName\":null},\"Contact\":{\"fields\":[{\"name\":\"AdminAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AirlineName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ContactStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToContact\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AirlineToContact\"}],\"dbName\":null},\"Report_To\":{\"fields\":[{\"name\":\"UserAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AdminAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ReportStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToReport_To\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Report_ToToUser\"},{\"name\":\"Reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"CreatedReports\"}],\"dbName\":null},\"CabinClass\":{\"fields\":[{\"name\":\"AircraftRegNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Class\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"StandardPrice\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToCabinClass\"}],\"dbName\":null},\"Seat\":{\"fields\":[{\"name\":\"AircraftRegNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SeatNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"SeatType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aircraft\",\"kind\":\"object\",\"type\":\"Aircraft\",\"relationName\":\"AircraftToSeat\"},{\"name\":\"tickets\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"SeatToTicket\"}],\"dbName\":null},\"Admin\":{\"fields\":[{\"name\":\"AdminAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IPAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToAdmin\"},{\"name\":\"sentAirlineMessages\",\"kind\":\"object\",\"type\":\"Airline_Message\",\"relationName\":\"AdminToAirline_Message\"},{\"name\":\"contacts\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"AdminToContact\"},{\"name\":\"involvedInReports\",\"kind\":\"object\",\"type\":\"Report_To\",\"relationName\":\"AdminToReport_To\"}],\"dbName\":null},\"Airline_Message\":{\"fields\":[{\"name\":\"AirlineName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AdminAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"MessageText\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToAirline_Message\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AirlineToAirline_Message\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"AccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"FirstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"LastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AccountToAdmin\"}],\"dbName\":null},\"User\":{\"fields\":[{\"name\":\"UserAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"telNos\",\"kind\":\"object\",\"type\":\"User_Tel_No\",\"relationName\":\"UserToUser_Tel_No\"},{\"name\":\"assignedFlights\",\"kind\":\"object\",\"type\":\"Assigned_To\",\"relationName\":\"Assigned_ToToUser\"},{\"name\":\"purchases\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"PurchaseToUser\"},{\"name\":\"involvedInReports\",\"kind\":\"object\",\"type\":\"Report_To\",\"relationName\":\"Report_ToToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"User_Tel_No\":{\"fields\":[{\"name\":\"UserAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"TelNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUser_Tel_No\"}],\"dbName\":null},\"Report\":{\"fields\":[{\"name\":\"ReportID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ReportDescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"BookingID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Attachment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AdminAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"TelNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PassengerName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"Report_To\",\"relationName\":\"CreatedReports\"}],\"dbName\":null},\"Domestic_Ticket\":{\"fields\":[{\"name\":\"TicketID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"Domestic_TicketToTicket\"}],\"dbName\":null},\"International_Ticket\":{\"fields\":[{\"name\":\"TicketID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PassportNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"IssuedCountry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PassportExpiry\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"International_TicketToTicket\"}],\"dbName\":null},\"Round_Trip_Ticket\":{\"fields\":[{\"name\":\"TicketID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"TicketID2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ticket1\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"RoundTrip1\"},{\"name\":\"ticket2\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"RoundTrip2\"}],\"dbName\":null},\"Purchase\":{\"fields\":[{\"name\":\"TicketID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PaymentID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ticket\",\"kind\":\"object\",\"type\":\"Ticket\",\"relationName\":\"PurchaseToTicket\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToPurchase\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PurchaseToUser\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"PaymentID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"PaymentDateTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"PaymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"TransactionStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"Amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"purchase\",\"kind\":\"object\",\"type\":\"Purchase\",\"relationName\":\"PaymentToPurchase\"}],\"dbName\":null},\"Airline_Tel_No\":{\"fields\":[{\"name\":\"TelNo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"AirlineName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"airline\",\"kind\":\"object\",\"type\":\"Airline\",\"relationName\":\"AirlineToAirline_Tel_No\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"SessionID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"UserAccountID\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"TokenHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"CreatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"LastSeenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"IdleExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"AbsoluteExpiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"RevokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"RevokeReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

